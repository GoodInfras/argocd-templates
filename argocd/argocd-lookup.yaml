apps_dict:
  git@github.com/ThomasInfras/argocd-template/argocd-simple:
    argocd:
      spec:
        source:
          helm:
            valuesObjects: 
              repoServer:
                volumes:
                  - name: helm-replace
                    configMap:
                      name: config-map-helm-replace
                      defaultMode: 0777
                volumeMounts:
                  - name: helm-replace
                    mountPath: /usr/local/sbin/helm
                    subPath: helm
                env:
                  - name: HELM_BIN
                    value: /usr/local/bin/helm

objects:
  config-map-helm-replace:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config-map-helm-replace
      namespace: argocd
    data:
      helm: |-
        #!/bin/bash

        HELM_BIN=${HELM_BIN:-helm}

        new_args=()
        template_found=false

        for arg in "$@"; do
          if [[ "$arg" == "template" ]]; then
            template_found=true
            new_args+=("$arg")
          elif $template_found && [[ "${#new_args[@]}" -eq 1 ]]; then
            new_args+=("--dry-run=server" "$arg")
            template_found=false
          else
            new_args+=("$arg")
          fi
        done

        $HELM_BIN "${new_args[@]}"
  argocd-repo-server-access:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: argocd-repo-server-access
      namespace: argocd
    rules:
    - apiGroups: [""]
      resources: ["configmaps", "secrets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources: ["nodes"]
      verbs: ["get", "list", "watch"]

  argocd-repo-server-access-binding:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: argocd-repo-server-access-binding
      namespace: argocd
    subjects:
    - kind: ServiceAccount
      name: argocd-repo-server
      namespace: argocd
    roleRef:
      kind: ClusterRole
      name: argocd-repo-server-access
      apiGroup: rbac.authorization.k8s.io
  
#    testauth:
#      apiVersion: traefik.io/v1alpha1
#      kind: Middleware
#      metadata:
#        name: testauth  
#        namespace: argocd-infra
#      spec:
#        basicAuth:
#          #headerField: X-WebAuth-User
#          secret: basic-auth
#          realm: "Traefik-ovh"
#          #removeHeader: true
